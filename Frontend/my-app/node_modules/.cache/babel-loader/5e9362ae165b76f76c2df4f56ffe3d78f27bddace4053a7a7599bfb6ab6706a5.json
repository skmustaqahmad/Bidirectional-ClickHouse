{"ast":null,"code":"var _jsxFileName = \"F:\\\\Mustaq\\\\Bidirectional ClickHouse\\\\Frontend\\\\my-app\\\\src\\\\components\\\\ColumnSelection.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ColumnSelection({\n  columns,\n  selectedColumns,\n  setSelectedColumns\n}) {\n  const toggleColumn = columnName => {\n    if (selectedColumns.includes(columnName)) {\n      setSelectedColumns(selectedColumns.filter(col => col !== columnName));\n    } else {\n      setSelectedColumns([...selectedColumns, columnName]);\n    }\n  };\n  const toggleAllColumns = () => {\n    if (selectedColumns.length === columns.length) {\n      setSelectedColumns([]);\n    } else {\n      setSelectedColumns(columns.map(col => col.name));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"column-selection\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Select Columns\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"select-all\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: columns.length > 0 && selectedColumns.length === columns.length,\n          onChange: toggleAllColumns\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), \"Select All\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"columns-container\",\n      children: columns.map(column => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column-item\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: selectedColumns.includes(column.name),\n            onChange: () => toggleColumn(column.name)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), column.name, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"column-type\",\n            children: [\"(\", column.type, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, column.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_c = ColumnSelection;\nexport default ColumnSelection;\nvar _c;\n$RefreshReg$(_c, \"ColumnSelection\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ColumnSelection","columns","selectedColumns","setSelectedColumns","toggleColumn","columnName","includes","filter","col","toggleAllColumns","length","map","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","column","_c","$RefreshReg$"],"sources":["F:/Mustaq/Bidirectional ClickHouse/Frontend/my-app/src/components/ColumnSelection.js"],"sourcesContent":["import React from 'react';\r\n\r\nfunction ColumnSelection({ columns, selectedColumns, setSelectedColumns }) {\r\n  const toggleColumn = (columnName) => {\r\n    if (selectedColumns.includes(columnName)) {\r\n      setSelectedColumns(selectedColumns.filter(col => col !== columnName));\r\n    } else {\r\n      setSelectedColumns([...selectedColumns, columnName]);\r\n    }\r\n  };\r\n\r\n  const toggleAllColumns = () => {\r\n    if (selectedColumns.length === columns.length) {\r\n      setSelectedColumns([]);\r\n    } else {\r\n      setSelectedColumns(columns.map(col => col.name));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"column-selection\">\r\n      <h3>Select Columns</h3>\r\n      <div className=\"select-all\">\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={columns.length > 0 && selectedColumns.length === columns.length}\r\n            onChange={toggleAllColumns}\r\n          />\r\n          Select All\r\n        </label>\r\n      </div>\r\n      <div className=\"columns-container\">\r\n        {columns.map((column) => (\r\n          <div key={column.name} className=\"column-item\">\r\n            <label>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={selectedColumns.includes(column.name)}\r\n                onChange={() => toggleColumn(column.name)}\r\n              />\r\n              {column.name} <span className=\"column-type\">({column.type})</span>\r\n            </label>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ColumnSelection;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}